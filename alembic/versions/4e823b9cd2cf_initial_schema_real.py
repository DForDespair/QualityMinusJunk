"""initial schema (real)

Revision ID: 4e823b9cd2cf
Revises: 96950088f991
Create Date: 2025-05-11 14:12:43.185449

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4e823b9cd2cf'
down_revision: Union[str, None] = '96950088f991'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.Text(), nullable=False),
    sa.Column('cik', sa.Text(), nullable=False),
    sa.Column('sic', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('security',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('ticker_root', sa.Text(), nullable=True),
    sa.Column('ticker_suffix', sa.Text(), nullable=True),
    sa.Column('ticker', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('list_date', sa.Date(), nullable=True),
    sa.Column('delisted_utc', sa.Date(), nullable=True),
    sa.Column('locale', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker')
    )
    op.create_table('fundamental_snapshot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('security_id', sa.Integer(), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('fiscal_period', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['security_id'], ['security.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('security_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('open', sa.Float(), nullable=True),
    sa.Column('high', sa.Float(), nullable=True),
    sa.Column('low', sa.Float(), nullable=True),
    sa.Column('close', sa.Float(), nullable=True),
    sa.Column('volume', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['security_id'], ['security.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('balance_sheet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('snapshot_id', sa.Integer(), nullable=False),
    sa.Column('assets', sa.Float(), nullable=True),
    sa.Column('current_assets', sa.Float(), nullable=True),
    sa.Column('cash', sa.Float(), nullable=True),
    sa.Column('accounts_receivable', sa.Float(), nullable=True),
    sa.Column('inventory', sa.Float(), nullable=True),
    sa.Column('prepaid_expenses', sa.Float(), nullable=True),
    sa.Column('other_current_assets', sa.Float(), nullable=True),
    sa.Column('noncurrent_assets', sa.Float(), nullable=True),
    sa.Column('long_term_investments', sa.Float(), nullable=True),
    sa.Column('fixed_assets', sa.Float(), nullable=True),
    sa.Column('intangible_assets', sa.Float(), nullable=True),
    sa.Column('non_current_prepaid_expense', sa.Float(), nullable=True),
    sa.Column('other_noncurrent_assets', sa.Float(), nullable=True),
    sa.Column('liabilities', sa.Float(), nullable=True),
    sa.Column('current_liabilities', sa.Float(), nullable=True),
    sa.Column('accounts_payable', sa.Float(), nullable=True),
    sa.Column('interest_payable', sa.Float(), nullable=True),
    sa.Column('wages', sa.Float(), nullable=True),
    sa.Column('other_current_liabilities', sa.Float(), nullable=True),
    sa.Column('noncurrent_liabilities', sa.Float(), nullable=True),
    sa.Column('long_term_debt', sa.Float(), nullable=True),
    sa.Column('other_noncurrent_liabilities', sa.Float(), nullable=True),
    sa.Column('commitments_and_contingencies', sa.Float(), nullable=True),
    sa.Column('equity', sa.Float(), nullable=True),
    sa.Column('equity_attributable_to_noncontrolling', sa.Float(), nullable=True),
    sa.Column('equity_attributable_to_parent', sa.Float(), nullable=True),
    sa.Column('liabilities_and_equity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['snapshot_id'], ['fundamental_snapshot.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('snapshot_id')
    )
    op.create_table('cash_flow_statement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('snapshot_id', sa.Integer(), nullable=False),
    sa.Column('net_cash_flow_from_operating', sa.Float(), nullable=True),
    sa.Column('net_cash_flow_from_investing', sa.Float(), nullable=True),
    sa.Column('net_cash_flow_from_financing', sa.Float(), nullable=True),
    sa.Column('net_cash_flow', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['snapshot_id'], ['fundamental_snapshot.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('snapshot_id')
    )
    op.create_table('income_statement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('snapshot_id', sa.Integer(), nullable=False),
    sa.Column('revenue', sa.Float(), nullable=True),
    sa.Column('cost_of_revenue', sa.Float(), nullable=True),
    sa.Column('gross_profit', sa.Float(), nullable=True),
    sa.Column('operating_expense', sa.Float(), nullable=True),
    sa.Column('selling_general_and_admin', sa.Float(), nullable=True),
    sa.Column('depreciation_and_amortization', sa.Float(), nullable=True),
    sa.Column('research_and_development', sa.Float(), nullable=True),
    sa.Column('other_operating_expenses', sa.Float(), nullable=True),
    sa.Column('operating_income_loss', sa.Float(), nullable=True),
    sa.Column('interest_and_debt_expense', sa.Float(), nullable=True),
    sa.Column('income_tax_expense_benefit', sa.Float(), nullable=True),
    sa.Column('net_income_loss', sa.Float(), nullable=True),
    sa.Column('basic_average_shares', sa.Float(), nullable=True),
    sa.Column('diluted_average_shares', sa.Float(), nullable=True),
    sa.Column('common_stock_dividends', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['snapshot_id'], ['fundamental_snapshot.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('snapshot_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('income_statement')
    op.drop_table('cash_flow_statement')
    op.drop_table('balance_sheet')
    op.drop_table('price')
    op.drop_table('fundamental_snapshot')
    op.drop_table('security')
    op.drop_table('company')
    # ### end Alembic commands ###
